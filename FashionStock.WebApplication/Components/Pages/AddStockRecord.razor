@page "/addstockrecords"
@using FashionStock.WebApi.Models
@rendermode InteractiveServer
@inject IWebApi WebApi
@inject NavigationManager NavigationManager
@inject HttpClient Http


<MudContainer MaxWidth="MaxWidth.Small" Class="mt-4">
    <MudCard Class="elevation-4" Style="background-color: #E3F2FD;">
        <MudCardHeader>
            <MudText Typo="Typo.h5" Align="Align.Center" Class="text-primary">Adicionar Registro de Estoque</MudText>
        </MudCardHeader>

        <MudCardContent>
            <EditForm FormName="AddStockRecordForm" Model="stockRecordModel">
                <MudGrid>
                    <MudItem xs="12">
                        <label for="ProductSelect">Select a product:</label>
                        <select id="ProductSelect" class="form-control mr-1" @bind="@stockRecordModel.ProductId">
                            <option value="">Select a Product</option>
                            @foreach (var product in _products)
                            {
                                <option value="@product.Id">@product.Name</option>
                            }
                        </select>
                    </MudItem>
                    <MudItem xs="12">
                        <label for="RecordTypeSelect">Select a record type:</label>
                        <select id="RecordTypeSelect" class="form-control mr-1" @bind="@stockRecordModel.RecordTypeId">
                            <option value="">Select a Record Type</option>
                            @foreach (var type in _types)
                            {
                                <option value="@type.Id">@type.Name</option>
                            }
                        </select>
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField Label="Usuário" @bind-Value="stockRecordModel.UserId" Required="true" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField Label="Quantidade" @bind-Value="stockRecordModel.Quantity" Required="true" Type="number" />
                    </MudItem>
                </MudGrid>

                <MudCardActions Class="justify-end mt-4">
                    <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
                    <MudButton OnClick="AddNewRecord" Variant="Variant.Filled" Color="Color.Success" Class="ml-2">Save</MudButton>
                </MudCardActions>
            </EditForm>
        </MudCardContent>
    </MudCard>
</MudContainer>


@code {

    protected override async Task OnParametersSetAsync()
    {
        _products = await WebApi.GetProducts();
        _types = await WebApi.GetRecordTypes();

    }

    private StockRecordModel stockRecordModel { get; set; } = new StockRecordModel();

    private ProductModel productModel { get; set; } = new();

    private List<ProductModel> _products { get; set; } = new();

    private List<RecordTypeModel> _types { get; set; } = new();

    private async Task AddNewRecord()
    {
        productModel = await WebApi.GetProduct((int)stockRecordModel.ProductId);
        UpdateProductQuantity(productModel);
        var result = await WebApi.SaveStockRecord(stockRecordModel);
    }

    private async Task UpdateProductQuantity(ProductModel productModel)
    {
        if (stockRecordModel.RecordTypeId.Equals(3))
        {
            productModel.Quantity -= stockRecordModel.Quantity;
            await WebApi.UpdateProduct(productModel);
        }
        else
        {
            productModel.Quantity += stockRecordModel.Quantity;
            await WebApi.UpdateProduct(productModel);
        }
    }

    private async Task SaveStockRecord()
    {

        var newStockRecord = new StockRecordModel();

        newStockRecord.ProductId = stockRecordModel.ProductId;
        newStockRecord.UserId = stockRecordModel.UserId;
        newStockRecord.RecordTypeId = stockRecordModel.RecordTypeId;
        newStockRecord.Quantity = stockRecordModel.Quantity;
        newStockRecord.CreatedAt = DateTime.Now;
        newStockRecord.UpdatedAt = DateTime.Now;
        newStockRecord.Id = 0;

        try
        {
            var stringJson = new StringContent(
               System.Text.Json.JsonSerializer.Serialize(newStockRecord),
               System.Text.Encoding.UTF8,
               "application/json"
        );


            HttpClientHandler handler = new HttpClientHandler();

            using (var client = new HttpClient(handler, false))
            {
                var response = await client.PostAsync("https://localhost:7281/addstockrecord", stringJson);

                if (response.IsSuccessStatusCode)
                {
                    NavigationManager.NavigateTo("/stockrecords");

                }
            }


        }
        catch (Exception e)
        {
            Console.WriteLine($"Erro: {e.Message}");
            throw;
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/stockrecords");
    }


}