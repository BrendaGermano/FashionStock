@page "/dashboard"
@using FashionStock.WebApi.Models
@inject IWebApi WebApi



<MudContainer>
    <MudGrid>
        <MudItem xs="12" md="4">
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.h6">Low Stock Products</MudText>
                <MudChart ChartType="ChartType.Pie" InputData="@lowStockData" InputLabels="@lowStockLabels" Width="300px" Height="300px" />
            </MudPaper>
        </MudItem>
        <MudItem xs="12" md="4">
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.h6">Best Selling Products</MudText>
                <MudChart ChartType="ChartType.Pie" InputData="@topSellingProductsData" InputLabels="@topSellingProductsLabels" Width="300px" Height="300px" />
            </MudPaper>
        </MudItem>
        <MudItem xs="12" md="4">
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.h6">Best Selling Categories</MudText>
                <MudChart ChartType="ChartType.Pie" InputData="@topSellingCategoriesData" InputLabels="@topSellingCategoriesLabels" Width="300px" Height="300px" />
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private double[] lowStockData;
    private string[] lowStockLabels;

    private double[] topSellingProductsData;
    private string[] topSellingProductsLabels;

    private double[] topSellingCategoriesData;
    private string[] topSellingCategoriesLabels;

    protected override async Task OnInitializedAsync()
    {
        await LoadLowStockData();
        await LoadTopSellingProductsData();
        await LoadTopSellingCategoriesData();
    }

    private async Task LoadLowStockData()
    {
        var products = await WebApi.GetLowStock();
        lowStockData = products.Select(p => (double)p.Quantity).ToArray();
        lowStockLabels = products.Select(p => p.Name).ToArray();
    }

    private async Task LoadTopSellingProductsData(int top = 5)
    {
        var products = await WebApi.GetTopSellingProducts(); 
        topSellingProductsData = products.Select(p => (double)p.TotalSold).ToArray();
        topSellingProductsLabels = products.Select(p => p.Name).ToArray();
    }

    private async Task LoadTopSellingCategoriesData()
    {
        var categories = await WebApi.GetTopSellingCategories(); 
        topSellingCategoriesData = categories.Select(c => (double)c.TotalSold).ToArray();
        topSellingCategoriesLabels = categories.Select(c => c.Name).ToArray();
    }
}


