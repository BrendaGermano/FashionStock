@page "/product/{id:int}"
@rendermode InteractiveServer
@using FashionStock.WebApi.Models
@inject IWebApi WebApi


<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
        <EditForm Model="@productModel" OnValidSubmit="SaveProduct">
            <MudGrid Justify="Justify.Center" AlignItems="AlignItems.Center" Style="height: 100vh;">
                <MudItem xs="12" sm="7">
                <MudCard Class="elevation-4" Style="background-color: #E3F2FD;">
                    <MudCardHeader Class="mud-card-header-custom">
                        <MudText Typo="Typo.h5" Align="Align.Center" Class="text-primary">@productModel.Name</MudText>
                    </MudCardHeader>
                        <MudCardContent>
                        <MudTextField Label="Name"
                                  @bind-Value="productModel.Name"/>
                        <MudTextField Label="Description" Class="mt-3"
                                  @bind-Value="productModel.Description"/>
                        <MudTextField Label="Price" Class="mt-3"
                                  @bind-Value="productModel.Price" />
                        <MudTextField Label="Quantity" Class="mt-3"
                                  @bind-Value="productModel.Quantity" InputType="InputType.Number" />
                        </MudCardContent>
                            <MudCardActions Class="justify-end">
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.Save" Style="background: linear-gradient(45deg, #81C784, #66BB6A); color: white;">Save Product</MudButton>
                            </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </EditForm>
    </MudContainer>


@code {
    [Parameter]
    public int Id { get; set; }

    private ProductModel productModel { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        productModel = await WebApi.GetProduct(Id);
    }

    private async void SaveProduct()
    {
        //var result = await WebApi.UpdateProduct(productModel);

    }

}
