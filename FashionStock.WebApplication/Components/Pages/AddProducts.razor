@page "/addproducts"
@using FashionStock.WebApi.Models
@rendermode InteractiveServer
@inject IWebApi WebApi
@inject NavigationManager NavigationManager
@inject HttpClient Http


<MudContainer MaxWidth="MaxWidth.Small" Class="mt-4">
    <MudCard Class="elevation-4" Style="background-color: #E3F2FD;">
        <MudCardHeader>
            <MudText Typo="Typo.h5" Align="Align.Center" Class="text-primary">Add New Product</MudText>
        </MudCardHeader>

        <MudCardContent>
            <EditForm FormName="AddProductForm" Model="@productModel" OnValidSubmit="SaveProduct">
                <DataAnnotationsValidator/>
                <MudGrid>
                    <MudItem xs="12">
                        <MudTextField Label="Product Name" @bind-Value="@productModel.Name" Required="true" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField Label="Description" @bind-Value="@productModel.Description" Required="true" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField Label="Price" @bind-Value="@productModel.Price" Required="true" Type="number" />
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField Label="Quantity" @bind-Value="@productModel.Quantity" Required="true" Type="number" />
                    </MudItem>
                    <MudItem xs="12">

                        <label for="CategorySelect">Select an Option:</label>
                        <select id="CategorySelect" class="form-control" @bind="@productModel.CategoryId">
                            <option value="">Select a Category</option>
                            @foreach (var category in _categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>

                    </MudItem>
                </MudGrid>
                <MudCardActions Class="justify-end mt-4">
                    <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="GoBack">Cancel</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Success" Type="submit" Class="ml-2" @onclick="SaveProduct">Save</MudButton>
                </MudCardActions>
            </EditForm>
        </MudCardContent>
    </MudCard>
</MudContainer>


@code {
    private ProductModel productModel { set; get; } = new();

    private List<CategoryModel> _categories { get; set; } = new();


    protected override async Task OnParametersSetAsync()
    {
        _categories = await WebApi.GetCategories();
    }

    private async void SaveProduct()
    {
        var newproduct = new ProductModel();

        newproduct.Name = productModel.Name;
        newproduct.Description = productModel.Description;
        newproduct.Price = productModel.Price;
        newproduct.CategoryId = productModel.CategoryId;
        newproduct.Quantity = productModel.Quantity;
        newproduct.CreatedAt = DateTime.Now;
        newproduct.UpdatedAt = DateTime.Now;
        newproduct.Id = 0;

        try
        {
            var stringJson = new StringContent(
               System.Text.Json.JsonSerializer.Serialize(newproduct),
               System.Text.Encoding.UTF8,
               "application/json"
        );


            HttpClientHandler handler = new HttpClientHandler();

            using (var client = new HttpClient(handler, false))
            {
                var response = await client.PostAsync("https://localhost:7281/addproduct", stringJson);

                if (response.IsSuccessStatusCode)
                {
                    NavigationManager.NavigateTo("/products");
                   
                }
            }
            

        }
        catch (Exception e)
        {
            Console.WriteLine($"Erro: {e.Message}");
            throw;
        }
    }
    private void GoBack()
    {
        NavigationManager.NavigateTo("/products");
    }
}
