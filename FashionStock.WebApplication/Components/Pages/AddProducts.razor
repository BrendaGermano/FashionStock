@page "/addproducts"
@using FashionStock.WebApi.Models
@rendermode InteractiveServer
@inject IWebApi WebApi
@inject NavigationManager NavigationManager
@inject HttpClient Http


<MudContainer MaxWidth="MaxWidth.False" Class="mt-4 d-flex justify-center" Style="background-color: #E3F2FD; padding: 20px; border-radius: 12px;">
    <MudCard Class="elevation-4" Style="background-color: #BBDEFB; border-radius: 12px; width: 90vw; max-width: 1200px; padding: 16px; box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);">
        <MudCardHeader Class="border-bottom" Style="border-bottom: 2px solid #64B5F6; background-color: #BBDEFB; padding: 12px; border-top-left-radius: 12px; border-top-right-radius: 12px;">
            <MudText Typo="Typo.h5" Align="Align.Center" Class="text-primary">Add New Product</MudText>
        </MudCardHeader>

        <MudCardContent>
            <EditForm FormName="AddProductForm" Model="@productModel" OnValidSubmit="SaveProduct">
                <DataAnnotationsValidator />
                <MudGrid Class="justify-center" Style="display: flex; flex-wrap: wrap; gap: 12px;">
                    <MudItem xs="12" md="6">
                        <MudTextField Label="Product Name" @bind-Value="@productModel.Name" Required="true" FullWidth Style="background-color: white; border-radius: 8px; border: 1px solid #64B5F6; padding: 6px; min-width: 300px; max-width: 100%;" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField Label="Price" @bind-Value="@productModel.Price" Required="true" Type="number" FullWidth Style="background-color: white; border-radius: 8px; border: 1px solid #64B5F6; padding: 6px; min-width: 300px; max-width: 100%;" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField Label="Description" @bind-Value="@productModel.Description" Required="true" FullWidth Style="background-color: white; border-radius: 8px; border: 1px solid #64B5F6; padding: 6px; min-width: 300px; max-width: 100%;" />
                    </MudItem>
                    @* <MudItem xs="12" md="6">
                    <MudTextField Label="Quantity" @bind-Value="@productModel.Quantity" Required="true" Type="number" />
                    </MudItem> *@
                    <MudItem xs="12" md="6">
                        <label for="CategorySelect" class="text-primary">Select a Category:</label>
                        <select id="CategorySelect" class="form-control" @bind="@productModel.CategoryId" Style="background-color: white; border: 1px solid #64B5F6; border-radius: 8px; width: 100%; padding: 6px; min-width: 300px; max-width: 100%;">
                            <option value="">Select a Category</option>
                            @foreach (var category in _categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </MudItem>
                </MudGrid>
                <MudCardActions Class="justify-end mt-3" Style="padding: 12px; border-top: 2px solid #64B5F6; background-color: #BBDEFB; border-bottom-left-radius: 12px; border-bottom-right-radius: 12px;">
                    <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="GoBack" Style="border-color: #64B5F6; color: #1565C0; border-radius: 8px; padding: 6px 14px;">Cancel</MudButton>
                    <MudButton @onclick="SaveProduct" Variant=" Variant.Filled" Color="Color.Primary" Type="submit" Class="ml-2" Style="background-color: #1976D2; color: white; border-radius: 8px; padding: 6px 14px;">Save</MudButton>
                </MudCardActions>
            </EditForm>
        </MudCardContent>
    </MudCard>
</MudContainer>


@code {
    private ProductModel productModel { set; get; } = new();

    private List<CategoryModel> _categories { get; set; } = new();


    protected override async Task OnParametersSetAsync()
    {
        _categories = await WebApi.GetCategories();
    }

    private async void SaveProduct()
    {
        var newproduct = new ProductModel();

        newproduct.Name = productModel.Name;
        newproduct.Description = productModel.Description;
        newproduct.Price = productModel.Price;
        newproduct.CategoryId = productModel.CategoryId;
        // newproduct.Quantity = productModel.Quantity;
        newproduct.CreatedAt = DateTime.Now;
        newproduct.UpdatedAt = DateTime.Now;
        newproduct.Id = 0;

        try
        {
            var stringJson = new StringContent(
               System.Text.Json.JsonSerializer.Serialize(newproduct),
               System.Text.Encoding.UTF8,
               "application/json"
        );


            HttpClientHandler handler = new HttpClientHandler();

            using (var client = new HttpClient(handler, false))
            {
                var response = await client.PostAsync("https://localhost:7281/addproduct", stringJson);

                if (response.IsSuccessStatusCode)
                {
                    NavigationManager.NavigateTo("/products");
                   
                }
            }
            

        }
        catch (Exception e)
        {
            Console.WriteLine($"Erro: {e.Message}");
            throw;
        }
    }
    private void GoBack()
    {
        NavigationManager.NavigateTo("/products");
    }
}
